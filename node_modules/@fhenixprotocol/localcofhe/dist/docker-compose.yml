name: localcofhenix
version: '3.8'

volumes:
  keys:
    driver: local
    driver_opts:
      type: none
      device: ${KEYS_PATH:-./localcofhenix/keys}
      o: bind
  configs:
    driver: local
    driver_opts:
      type: none
      device: ${CONFIG_DIR:-./localcofhenix/configs}
      o: bind

# Define a template for party member services
x-party-member-template: &party-member-template
  build: .
  image: ghcr.io/fhenixprotocol/threshold-network:v0.0.5_rc_2
  network_mode: 'host'
  restart: unless-stopped
  command: partymember-service
  depends_on:
    preprocessor:
      condition: service_completed_successfully
    coordinator:
      condition: service_started
  volumes:
    - keys:/app/test_data:rw
    - configs:/app/configs

services:
  preprocessor:
    image: ghcr.io/fhenixprotocol/threshold-network:v0.0.5_rc_2
    container_name: preprocessor
    command: >
      sh -c "
        mkdir -p /app/docker/test_data/0 &&
        preprocessor --runtime-config test &&
        cp /app/docker/test_data/ck.binfile /app/docker/test_data/0/decryption_key &&
        cp /app/docker/test_data/public_key /app/docker/test_data/0/ &&
        cp /app/docker/test_data/computation_key /app/docker/test_data/0 &&
        cp /app/docker/test_data/crs /app/docker/test_data/0/crs &&
        cp -r /app/docker/test_data/0 /app/docker/test_data/1 &&
        echo 'Preprocessor done, keys copied to security zone 0 folder.'
      "
    volumes:
      - keys:/app/docker/test_data:rw

  host_chain:
    image: ghcr.io/fhenixprotocol/nitro/localfhenix:v0.3.2-alpha.17
    ports:
      - '42069:8547'
      - '42070:8548'
      - '42000:3000'

  registry_chain:
    image: ghcr.io/fhenixprotocol/nitro/localfhenix:v0.3.2-alpha.17
    ports:
      - '42169:8547'
      - '42170:8548'
      - '42100:3000'

  fheos_server:
    image: ghcr.io/fhenixprotocol/cofhe/fheos
    network_mode: 'host'
    ports:
      - '8448:8448' # External API
      - '8449:8449' # Internal API
    environment:
      - FHEOS_ORACLE_TYPE=network # "local" or "network", to use local decryptions or threshold network decryptions
    volumes:
      - keys:/home/user/keys:rw # fheos is recreating the keys files as part of the loading process for god sake reason, so it must have write access otherwise it's silently failing
    depends_on:
      registry_chain:
        condition: service_started
      host_chain:
        condition: service_started
      preprocessor:
        condition: service_completed_successfully

  middleware:
    image: ghcr.io/fhenixprotocol/cofhe/middleware
    network_mode: 'host'
    depends_on:
      - host_chain
      - registry_chain
      - fheos_server

  rabbitmq:
    image: rabbitmq:4.0-management
    container_name: rabbitmq
    network_mode: 'host'
    ports:
      - '5672:5672' # AMQP port
      - '15672:15672' # Management UI port
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'check_port_connectivity']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  coordinator:
    build: .
    image: ghcr.io/fhenixprotocol/threshold-network:v0.0.5_rc_2
    container_name: coordinator
    network_mode: 'host'
    ports:
      - '50050:50050' # Grpc port
    restart: unless-stopped
    command: /usr/local/bin/coordinator-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - configs:/app

  dispatcher:
    build: .
    image: ghcr.io/fhenixprotocol/threshold-network:v0.0.5_rc_2
    container_name: dispatcher
    network_mode: 'host'
    ports:
      - '3000:3000' # HTTP port
      - '50054:50054' # GRPC port
    command: /usr/local/bin/dispatcher-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - configs:/app

  # Party member services using the template
  party-member-0:
    <<: *party-member-template
    container_name: party-member-0
    environment:
      - CONFIG_PATH=/app/configs/pm_config_00.toml

  party-member-1:
    <<: *party-member-template
    container_name: party-member-1
    environment:
      - CONFIG_PATH=/app/configs/pm_config_01.toml

  party-member-2:
    <<: *party-member-template
    container_name: party-member-2
    environment:
      - CONFIG_PATH=/app/configs/pm_config_02.toml

  party-member-3:
    <<: *party-member-template
    container_name: party-member-3
    environment:
      - CONFIG_PATH=/app/configs/pm_config_03.toml

  party-member-4:
    <<: *party-member-template
    container_name: party-member-4
    environment:
      - CONFIG_PATH=/app/configs/pm_config_04.toml

  zk-verifier:
    image: ghcr.io/fhenixprotocol/zk-verifier
    network_mode: 'host'
    ports:
      - '3001:3001'
    environment:
      - RUST_LOG=trace
      - CONFIG_PATH=/app/configs/zk_verifier_config.toml
    volumes:
      - configs:/app/configs
      - keys:/app/keys
    depends_on:
      preprocessor:
        condition: service_completed_successfully
