"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.logDeployment = exports.logError = exports.logWarning = exports.logSuccess = exports.logEmpty = exports.checkNetworkAndSkip = exports.hardhatSetCode = void 0;
const chalk_1 = __importDefault(require("chalk"));
const hardhatSetCode = async (hre, address, bytecode) => {
    await hre.network.provider.send("hardhat_setCode", [address, bytecode]);
};
exports.hardhatSetCode = hardhatSetCode;
// Network
const checkNetworkAndSkip = async (hre) => {
    const network = hre.network.name;
    const isHardhat = network === "hardhat";
    if (!isHardhat)
        (0, exports.logSuccess)(`cofhe-hardhat-plugin - deploy mocks - skipped on non-hardhat network ${network}`, 0);
    return isHardhat;
};
exports.checkNetworkAndSkip = checkNetworkAndSkip;
// Logging
const logEmpty = () => {
    console.log("");
};
exports.logEmpty = logEmpty;
const logSuccess = (message, indent = 1) => {
    console.log(chalk_1.default.green(`${"  ".repeat(indent)}✓ ${message}`));
};
exports.logSuccess = logSuccess;
const logWarning = (message, indent = 1) => {
    console.log(chalk_1.default.bold(chalk_1.default.yellow(`${"  ".repeat(indent)}⚠ NOTE:`)), message);
};
exports.logWarning = logWarning;
const logError = (message, indent = 1) => {
    console.log(chalk_1.default.red(`${"  ".repeat(indent)}✗ ${message}`));
};
exports.logError = logError;
const logDeployment = (contractName, address) => {
    const paddedName = `${contractName} deployed`.padEnd(36);
    (0, exports.logSuccess)(`${paddedName} ${chalk_1.default.bold(address)}`);
};
exports.logDeployment = logDeployment;
//# sourceMappingURL=utils.js.map