{
  "name": "cofhejs",
  "version": "0.3.1",
  "description": "The JavaScript SDK for Fhenix's CoFHE Service",
  "exports": {
    "./web": {
      "types": "./dist/web.d.ts",
      "import": "./dist/web.mjs",
      "require": "./dist/web.js"
    },
    "./node": {
      "types": "./dist/node.d.ts",
      "import": "./dist/node.mjs",
      "require": "./dist/node.js"
    }
  },
  "engines": {
    "node": ">=20.0.0"
  },
  "files": [
    "dist",
    "src",
    "licenses",
    "package.json",
    "package-lock.json",
    "README.md",
    "LICENSE"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/FhenixProtocol/cofhejs.git"
  },
  "author": "FhenixProtocol",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/FhenixProtocol/cofhejs/issues"
  },
  "homepage": "https://github.com/FhenixProtocol/cofhejs#readme",
  "dependencies": {
    "@types/node": "^20.0.0",
    "idb-keyval": "^6.2.1",
    "immer": "^10.1.1",
    "node-tfhe": "0.11.1",
    "tfhe": "0.11.1",
    "tweetnacl": "^1.0.3",
    "tweetnacl-util": "^0.15.1",
    "type-fest": "^4.26.1",
    "zod": "^3.23.8",
    "zustand": "^5.0.1"
  },
  "devDependencies": {
    "@rollup/plugin-commonjs": "25.0.8",
    "@rollup/plugin-node-resolve": "15.2.3",
    "@rollup/plugin-wasm": "6.2.2",
    "@typescript-eslint/eslint-plugin": "7.2.0",
    "@vitest/coverage-v8": "1.1.0",
    "eslint": "8.57.0",
    "ethers": "^6.9.1",
    "happy-dom": "^15.11.6",
    "jsdom": "^25.0.0",
    "prettier": "3.2.5",
    "rimraf": "^6.0.1",
    "rollup": "4.18.0",
    "shx": "^0.3.4",
    "ts-node": "10.9.2",
    "tsup": "^8.4.0",
    "typedoc": "0.25.13",
    "typedoc-plugin-extras": "3.0.0",
    "typescript": "5.4.5",
    "uglify-js": "3.17.4",
    "vite": "5.0.10",
    "vite-plugin-top-level-await": "1.4.1",
    "vite-plugin-wasm": "3.3.0",
    "vitest": "1.6.0"
  },
  "sideEffects": false,
  "tsup": {
    "entry": {
      "web": "./src/web/index.ts",
      "node": "./src/node/index.ts"
    },
    "format": [
      "cjs",
      "esm"
    ],
    "dts": true,
    "splitting": false,
    "sourcemap": true,
    "clean": true,
    "outDir": "dist"
  },
  "scripts": {
    "prebuild": "npm run clean",
    "build": "npm run prebuild && npm run build:web && npm run build:node",
    "build:web": "tsup --config tsup.config.ts --entry.web=./src/web/index.ts --platform=browser",
    "build:node": "tsup --config tsup.config.ts --entry.node=./src/node/index.ts --platform=node",
    "dev": "tsup --watch",
    "clean": "rimraf dist",
    "lint": "eslint src/",
    "_pure-compile": "tsc -p tsconfig.cjs.json && tsc -p tsconfig.esm.json && tsc -p tsconfig.types.json",
    "compile": "pnpm _hack-backup-cjs && pnpm _pure-compile && pnpm _hack-restore-cjs",
    "build-rollup": "rollup -c",
    "dev-rollup": "rollup -c -w",
    "test": "VITE_CJS_IGNORE_WARNING=true vitest",
    "coverage": "pnpm compile && VITE_CJS_IGNORE_WARNING=true vitest run --coverage",
    "test-no-localfhenix": "SKIP_LOCAL_ENV=true VITE_CJS_IGNORE_WARNING=true vitest ",
    "prettier": "prettier --write \"**/*.{js,json,md,sol,ts,yml}\"",
    "prettier-ci": "prettier --check \"**/*.{js,json,md,sol,ts,yml}\"",
    "test-docker-compose-down": "CONFIG_DIR=./docker/configs KEYS_PATH=./docker/keys docker compose -f test/docker-compose.yml down -v",
    "test-docker-compose-up": "CONFIG_DIR=./docker/configs KEYS_PATH=./docker/keys docker compose -f test/docker-compose.yml up -d",
    "test-docker-compose-pull": "docker compose -f test/docker-compose.yml pull"
  }
}